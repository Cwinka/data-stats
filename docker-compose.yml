version: "3.3"

services:
    redis:
        image: redis:alpine
        networks:
            - back
    backend:
        build:
            context: ./backend
            dockerfile: ./install/app.dockerfile
        image: fast:latest
        depends_on:
            - redis
        networks:
            - back
        environment:
            app_path: ./backend
        command: /usr/local/bin/gunicorn -w 2 -k uvicorn.workers.UvicornH11Worker -b :5000 main:app --reload
    back-proxy:
        image: nginx:alpine
        depends_on:
            - backend
        volumes:
            - "./nginx/back:/etc/nginx"
        environment:
            LISTEN_PORT: 5353
            PROXY_PASS: "http://backend:5000"
            MAX_BODY_SIZE: "30M"
        networks:
            - back
        ports: 
            - "5353:5353"
        command: >
                /bin/sh -c "envsubst '
                $${LISTEN_PORT} $${PROXY_PASS} $${MAX_BODY_SIZE}
                '< /etc/nginx/nginx.conf.template
                > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    frontend:
        build:
            context: ./frontend
            dockerfile: ./app.dockerfile
        image: front:latest
        depends_on: 
            - backend
        networks:
            - front
    front-proxy:
        image: nginx:alpine
        depends_on: 
            - frontend
        volumes: 
            - "./nginx/front:/etc/nginx"
        environment:
            LISTEN_PORT: 80
            PROXY_PASS: "http://frontend:3000"
            MAX_BODY_SIZE: "30M"
        networks:
            - front
        ports: 
            - "80:80"
        command: >
            /bin/sh -c "envsubst '
            $${LISTEN_PORT} $${PROXY_PASS} $${MAX_BODY_SIZE}
            '< /etc/nginx/nginx.conf.template
            > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

networks: 
    back:
    front:
